.ball {
    height: 100px;
    width: 100px;
    /* border: 2px solid black; */
    background-color: pink;
    color: white;
    margin-bottom: 5px;
    /*Transition will make the broswer apply a trnasition from 1 css rule to another over a period of time
    you must be going from A ---> B in order to apply a transition. Trnasition takes two args:
    1. which css rules to transform
    2. how long to get there */
    text-align: center;
    transition: all 5s;
}

.ball:hover {
    border-radius: 50%;
    background-color:purple;
    height: 300px;
    width: 300px;
    margin-left: 500px;
    display: inline-block;
    transform: rotate(1360deg);
}

.ball.ease {
    /*a third arg for transition is how te accelerate is applied.*/
    transition: all 2s ease-in;
}

.ball.ease-out {
    transition: all 2s ease-out;
}

.ball.what-the {
    transition-timing-function: cubic-bezier(1,.03,0,-1.04);
}

.square {
    height: 200px;
    width: 200px;
    background-color: rgb(255, 166, 0);
    margin-bottom: 5px;
    color: white;
    /*transofrm property allows you to apply cool transformations of any element
    that is otherwise just a rectable.
    1. rotate
    2. scale
    3. skew
    4. translate */
    transition: all 2s;
}

.square:hover {
    transform: rotate(0deg) !important;
    margin-left: 500px;
}

.square.rotate {
    /* rotate takes in degrees how much to rotate: !; */
    /* transform: rotateX(45deg); */
    transform: rotateY(360deg);
    /* transform: rotateX(360deg); */
    /* transform: rotateZ(360deg) */
}

.square.scale {
    /* scale takes in percentages how large or small to make an element relative to a base size */
    transform: scale(.2);    
    /* transform: scaleX(.2); 
    transform: scaleY(.2);  */
}

.square.skew {
    /* transform: skew(45deg); */
    /* transform: skewX(45deg); */
    transform: skewY(45deg);
}

.square.translate{
    transform: translate(200px, 200px);
}
